<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYa
        HSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAKTApIDASIAAhEBAxEB/8QA
        HQABAAIDAQEBAQAAAAAAAAAAAAEIAgYHBAUDCf/EADwQAQABAwMCAwYDBgUDBQAAAAABAgMEBQYRByES
        MUEIEyJRYXEUgZEyQnKhscEVI1KC0TSS8RYzU2Ph/8QAGgEBAAMBAQEAAAAAAAAAAAAAAAECBAMFBv/E
        ACERAQEAAwABBAMBAAAAAAAAAAABAgMRBAUSITETQVEi/9oADAMBAAIRAxEAPwDrYDz32AAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAACASIBCQAgAJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEJY1TwDJDHmTkvwjrNCOSauPUEjHmZjtH69k8VR6Tx9g7EiJqiJiJmI5+rzZufh4VPi
        ysuzYj53KoiP1TMardmM+69Q1PP6h7VwpmL2t4kzHpaq95P8mu5/WvaWN4os3sq/XH+mxVET+a3srll5
        OvH7rpw4ZqXtAYlPip07SKrk/u13Lvhj78cf3fX2J1n0/XMunD1ixTgXrtUU264q5on6T27Sn8dc55mr
        K8ldcGM1do4mJ5jmJj5fNlHdza8b2diRCRIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAACAGNTJjV5neIqJk9Yj1nknyl8feOs/wDp/bGfqVVVFM2aPFHi/wBU9qY/VMnV
        dmcwx6/DW946BoeVVjanqePYyKIiarc1R4o5+jUdV62bUw6qqbF3Jya6fS3b4iftU5D0/wBlax1i3Vqd
        27qVGPkUW/f3si9bmuJ5niKYiPlDs+ieyzpFFMVaxrmXeq7dsamKKZ/WJacdUjxc/UM+/DSdS9oGKoqj
        TdHuRx5TduRVH8oanm9at2Z9U2sSnHx6qp7e4tT4loND6DbB0y3EXdEoza6fK5k3Kpn+UxDedK2toelW
        ot4Gj4di3T5RFqJ/r3X/ABxkz8vZl+1H/e9Utx0x4LG4MqivvE02KvDxP1iH0sDod1I1iPeXcT3MT5/i
        cmaZ/SV5rVui1Rxboppj5Uxwzn7cre2Ryu3PL7qoWk+y1r1+Iq1LXMLF+dNNqa5/WJblpHss6HbiP8V1
        fMvz/wDR8H9VjYgmOxFO391x7SvZ72Lp/avAvZ08885Vzxf047OKe0l0rx9n3sTXNtY84+l3qvDetW+Z
        izcjymPlE8frK5Ucc8er4+8NAxNz7dztHz6IqsZVubczMfsz6T+Up5Cd72VwToju+Nx7XosZdyP8Swp8
        F3nzrp8on7R2j7uj8/14VLwL+pdKepl3Fyqao/D3fdXYnt7y1PlP91rMDJtZuHZysavx496iK6Z+7Jtn
        K+g8PfM8efx6fkckT2iPoj1cm+MhCRIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAACJATCsKocd9pbVasXauHgUT/1d7iqPpT8UT+rslXaOeFZvabz/AH26sPEon4cfGjxU
        /KqZn+zpq+aw+dnzU7Z7IWgzp/T29qVyiPfahkVV0Vevu4+H+sS73TxMfNpfSLSI0Xptt/Bpp8HGNTXx
        /FHi/u3KJnw/BHdrfOpq7Uzxw+fqOqYWl4lWTqOXZxrERzN25XFNMfnP9Hw+pO98DYu28jVNRnxzxNNi
        zTPxXK/lCl+r6pvXrPuOuizRdvxzMU49r4LNmnn970mTiFlNY9ozY2n11W7OVk51dMzFXurFVMRP0mWt
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/Z
</value>
  </data>
</root>